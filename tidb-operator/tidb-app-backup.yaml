apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-08-06T21:18:07Z"
    generateName: tidb-controller-manager-68968d9cb4-
    labels:
      app.kubernetes.io/component: controller-manager
      app.kubernetes.io/instance: tidb-operator
      app.kubernetes.io/name: tidb-operator
      pod-template-hash: 68968d9cb4
    name: tidb-controller-manager-68968d9cb4-4khg5
    namespace: tidb-app
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: tidb-controller-manager-68968d9cb4
      uid: 2115072f-5648-42d2-89df-dd93a8bb8d46
    resourceVersion: "3332"
    uid: 5efcb57d-823e-4c41-998c-ca7dbc0441ae
  spec:
    containers:
    - command:
      - /usr/local/bin/tidb-controller-manager
      - -tidb-backup-manager-image=pingcap/tidb-backup-manager:v1.6.3
      - -tidb-discovery-image=pingcap/tidb-operator:v1.6.3
      - -cluster-scoped=true
      - -cluster-permission-node=true
      - -cluster-permission-pv=true
      - -cluster-permission-sc=true
      - -auto-failover=true
      - -pd-failover-period=5m
      - -tikv-failover-period=5m
      - -tiflash-failover-period=5m
      - -tidb-failover-period=5m
      - -dm-master-failover-period=5m
      - -dm-worker-failover-period=5m
      - -v=2
      env:
      - name: NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: TZ
        value: UTC
      image: pingcap/tidb-operator:v1.6.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 10
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        tcpSocket:
          port: 6060
        timeoutSeconds: 1
      name: tidb-operator
      resources:
        requests:
          cpu: 80m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-khlm6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: node2.lilygn-265173.aiopslab-pg0.wisc.cloudlab.us
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: tidb-controller-manager
    serviceAccountName: tidb-controller-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-khlm6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-08-06T21:18:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-08-06T21:18:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-08-06T21:18:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-08-06T21:18:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-08-06T21:18:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://a60432fde652bc52d144966f1bc74a79bec6fd6c3e29ab964ea55564f6be47a2
      image: pingcap/tidb-operator:v1.6.3
      imageID: docker-pullable://pingcap/tidb-operator@sha256:30294147f2ae1e899312af437534e40759588e63d88169eee1de5f1ecb4d745c
      lastState: {}
      name: tidb-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-08-06T21:18:30Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-khlm6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 128.105.144.151
    hostIPs:
    - ip: 128.105.144.151
    phase: Running
    podIP: 10.244.1.2
    podIPs:
    - ip: 10.244.1.2
    qosClass: Burstable
    startTime: "2025-08-06T21:18:07Z"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: tidb-operator
      meta.helm.sh/release-namespace: tidb-app
    creationTimestamp: "2025-08-06T21:18:07Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller-manager
      app.kubernetes.io/instance: tidb-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: tidb-operator
      helm.sh/chart: tidb-operator-v1.6.3
    name: tidb-controller-manager
    namespace: tidb-app
    resourceVersion: "3334"
    uid: adccb4d5-ee49-4c46-ab22-d36eda7a3e28
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: controller-manager
        app.kubernetes.io/instance: tidb-operator
        app.kubernetes.io/name: tidb-operator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller-manager
          app.kubernetes.io/instance: tidb-operator
          app.kubernetes.io/name: tidb-operator
      spec:
        containers:
        - command:
          - /usr/local/bin/tidb-controller-manager
          - -tidb-backup-manager-image=pingcap/tidb-backup-manager:v1.6.3
          - -tidb-discovery-image=pingcap/tidb-operator:v1.6.3
          - -cluster-scoped=true
          - -cluster-permission-node=true
          - -cluster-permission-pv=true
          - -cluster-permission-sc=true
          - -auto-failover=true
          - -pd-failover-period=5m
          - -tikv-failover-period=5m
          - -tiflash-failover-period=5m
          - -tidb-failover-period=5m
          - -dm-master-failover-period=5m
          - -dm-worker-failover-period=5m
          - -v=2
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TZ
            value: UTC
          image: pingcap/tidb-operator:v1.6.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6060
            timeoutSeconds: 1
          name: tidb-operator
          resources:
            requests:
              cpu: 80m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: tidb-controller-manager
        serviceAccountName: tidb-controller-manager
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-08-06T21:18:31Z"
      lastUpdateTime: "2025-08-06T21:18:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-08-06T21:18:07Z"
      lastUpdateTime: "2025-08-06T21:18:31Z"
      message: ReplicaSet "tidb-controller-manager-68968d9cb4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: tidb-operator
      meta.helm.sh/release-namespace: tidb-app
    creationTimestamp: "2025-08-06T21:18:07Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller-manager
      app.kubernetes.io/instance: tidb-operator
      app.kubernetes.io/name: tidb-operator
      pod-template-hash: 68968d9cb4
    name: tidb-controller-manager-68968d9cb4
    namespace: tidb-app
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: tidb-controller-manager
      uid: adccb4d5-ee49-4c46-ab22-d36eda7a3e28
    resourceVersion: "3333"
    uid: 2115072f-5648-42d2-89df-dd93a8bb8d46
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: controller-manager
        app.kubernetes.io/instance: tidb-operator
        app.kubernetes.io/name: tidb-operator
        pod-template-hash: 68968d9cb4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller-manager
          app.kubernetes.io/instance: tidb-operator
          app.kubernetes.io/name: tidb-operator
          pod-template-hash: 68968d9cb4
      spec:
        containers:
        - command:
          - /usr/local/bin/tidb-controller-manager
          - -tidb-backup-manager-image=pingcap/tidb-backup-manager:v1.6.3
          - -tidb-discovery-image=pingcap/tidb-operator:v1.6.3
          - -cluster-scoped=true
          - -cluster-permission-node=true
          - -cluster-permission-pv=true
          - -cluster-permission-sc=true
          - -auto-failover=true
          - -pd-failover-period=5m
          - -tikv-failover-period=5m
          - -tiflash-failover-period=5m
          - -tidb-failover-period=5m
          - -dm-master-failover-period=5m
          - -dm-worker-failover-period=5m
          - -v=2
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TZ
            value: UTC
          image: pingcap/tidb-operator:v1.6.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6060
            timeoutSeconds: 1
          name: tidb-operator
          resources:
            requests:
              cpu: 80m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: tidb-controller-manager
        serviceAccountName: tidb-controller-manager
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items: []
kind: List
metadata:
  resourceVersion: ""
apiVersion: v1
items:
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIIAElYezEGjkwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA4MDYyMDQyMjVaFw0zNTA4MDQyMDQ3MjVaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQC5Z5lk+2FzuNfWIZbEaPIAsFBzeFcafxwBZlECfWo8KRFhJ4GGIkHq3B77
      DGabDBq27AjKE8tw9dnz8JdvvvLHMtYRIMqrdmF4nC4RoD2N1aam8Y1XGE36y2Yw
      djeZHq+/CqD0jwvGaC9KA/KwlKKhIpwUGyPZAv4+Wje4fy1U/nsY/Ms7AJc2KMDW
      sKrFV0tQy/GLCDt+zXWDSev4ta+voD1VO5ZRbpsPbIZgZukgXymvpxGrO6+xv/zZ
      o8nQOKRg+sCw1DOTxiAd7tZRoKSQLEakr82H7jvStcC1K8IFxkiYfW8cyxM1S9ng
      /Kyr+CypTgi2DpY09AgApLdEG7MVAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSg65615xHnwhaVUgxxg473snkUYDAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQAFiRXdwTyq
      GY92RXC0gFmO75PEu6mUL0mzgywzaC2QFFfX7ZYeluj81+assNzCSY5YEvQ4BvQv
      8g2EW40++pkcBwC5l5jvgmrifSxNshtK6xIGHRuxwV4j9ro6T57j+ddj3zrz/iYA
      cBIsyjzFzNIP93qHjHTyp7rf/HZtcygcxzXvmStjN1th4OnA4wX7OLrWKa1kF3ZB
      3hMD4UEPaWMue0aqA4lT0yfD9qaNHtWJsvqFBXMY16c3Nkgvg+bb620MQ1W5CY3m
      EhNnozNAsk+8jw1VypycdlYi32dpRbypWB2vtYUQZsvtzuIgwCHKpLDuRHJZUF+o
      MXQ8mSSlgKQQ
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-08-06T21:18:01Z"
    name: kube-root-ca.crt
    namespace: tidb-app
    resourceVersion: "3263"
    uid: 2062168b-eb03-44b3-8ae9-b3da87c2d8f9
- apiVersion: v1
  data:
    release: 
  kind: Secret
  metadata:
    creationTimestamp: "2025-08-06T21:18:06Z"
    labels:
      modifiedAt: "1754515087"
      name: tidb-operator
      owner: helm
      status: deployed
      version: "1"
    name: sh.helm.release.v1.tidb-operator.v1
    namespace: tidb-app
    resourceVersion: "3287"
    uid: 0bf9c862-c182-4696-a8c1-6bba2db89a84
  type: helm.sh/release.v1
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-08-06T21:18:01Z"
    name: default
    namespace: tidb-app
    resourceVersion: "3262"
    uid: bbfd38d4-2ff1-4ec8-b69e-01c041ab86c7
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      meta.helm.sh/release-name: tidb-operator
      meta.helm.sh/release-namespace: tidb-app
    creationTimestamp: "2025-08-06T21:18:06Z"
    labels:
      app.kubernetes.io/component: controller-manager
      app.kubernetes.io/instance: tidb-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: tidb-operator
      helm.sh/chart: tidb-operator-v1.6.3
    name: tidb-controller-manager
    namespace: tidb-app
    resourceVersion: "3275"
    uid: b759c4fa-b9ed-4253-94d7-53c7affc7aa6
kind: List
metadata:
  resourceVersion: ""
